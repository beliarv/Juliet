// NOTE - eventually this file will be automatically updated using a Perl script that understand
// the naming of test case files, functions, and namespaces.

#ifndef _TESTCASES_H
#define _TESTCASES_H

#ifdef __cplusplus
extern "C" {
#endif

// declare C good and bad functions
#ifndef OMITGOOD
	/* BEGIN-AUTOGENERATED-C-GOOD-FUNCTION-DECLARATIONS */
	void CWE483_Incorrect_Block_Delimitation__if_without_braces_multiple_lines_01_good();

	void CWE483_Incorrect_Block_Delimitation__if_without_braces_single_line_01_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_01_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_02_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_03_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_04_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_05_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_06_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_07_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_08_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_09_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_10_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_11_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_12_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_13_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_14_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_15_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_16_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_17_good();

	void CWE483_Incorrect_Block_Delimitation__semicolon_18_good();

	/* END-AUTOGENERATED-C-GOOD-FUNCTION-DECLARATIONS */
#endif // OMITGOOD


#ifndef OMITBAD
	/* BEGIN-AUTOGENERATED-C-BAD-FUNCTION-DECLARATIONS */
	void CWE483_Incorrect_Block_Delimitation__if_without_braces_multiple_lines_01_bad();

	void CWE483_Incorrect_Block_Delimitation__if_without_braces_single_line_01_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_01_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_02_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_03_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_04_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_05_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_06_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_07_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_08_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_09_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_10_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_11_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_12_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_13_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_14_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_15_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_16_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_17_bad();

	void CWE483_Incorrect_Block_Delimitation__semicolon_18_bad();

	/* END-AUTOGENERATED-C-BAD-FUNCTION-DECLARATIONS */
#endif // OMITBAD

#ifdef __cplusplus
} // end extern "C"
#endif

#ifdef __cplusplus
// declare C++ namespaces and good and bad functions

#ifndef OMITGOOD
	/* BEGIN-AUTOGENERATED-CPP-GOOD-FUNCTION-DECLARATIONS */

	/* END-AUTOGENERATED-CPP-GOOD-FUNCTION-DECLARATIONS */
#endif // OMITGOOD


#ifndef OMITBAD
	/* BEGIN-AUTOGENERATED-CPP-BAD-FUNCTION-DECLARATIONS */

	/* END-AUTOGENERATED-CPP-BAD-FUNCTION-DECLARATIONS */
#endif // OMITBAD


#endif // __cplusplus


#endif //  _TESTCASES_H
