// NOTE - eventually this file will be automatically updated using a Perl script that understand
// the naming of test case files, functions, and namespaces.

#ifndef _TESTCASES_H
#define _TESTCASES_H

#ifdef __cplusplus
extern "C" {
#endif

// declare C good and bad functions
#ifndef OMITGOOD
	/* BEGIN-AUTOGENERATED-C-GOOD-FUNCTION-DECLARATIONS */

	/* END-AUTOGENERATED-C-GOOD-FUNCTION-DECLARATIONS */
#endif // OMITGOOD


#ifndef OMITBAD
	/* BEGIN-AUTOGENERATED-C-BAD-FUNCTION-DECLARATIONS */

	/* END-AUTOGENERATED-C-BAD-FUNCTION-DECLARATIONS */
#endif // OMITBAD

#ifdef __cplusplus
} // end extern "C"
#endif

#ifdef __cplusplus
// declare C++ namespaces and good and bad functions

#ifndef OMITGOOD
	/* BEGIN-AUTOGENERATED-CPP-GOOD-FUNCTION-DECLARATIONS */
	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_01 { void good();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_02 { void good();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_03 { void good();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_04 { void good();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_05 { void good();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_06 { void good();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_07 { void good();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_08 { void good();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_09 { void good();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_10 { void good();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_11 { void good();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_12 { void good();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_13 { void good();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_14 { void good();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_15 { void good();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_16 { void good();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_17 { void good();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_18 { void good();}

	/* END-AUTOGENERATED-CPP-GOOD-FUNCTION-DECLARATIONS */
#endif // OMITGOOD


#ifndef OMITBAD
	/* BEGIN-AUTOGENERATED-CPP-BAD-FUNCTION-DECLARATIONS */
	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_01 { void bad();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_02 { void bad();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_03 { void bad();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_04 { void bad();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_05 { void bad();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_06 { void bad();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_07 { void bad();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_08 { void bad();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_09 { void bad();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_10 { void bad();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_11 { void bad();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_12 { void bad();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_13 { void bad();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_14 { void bad();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_15 { void bad();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_16 { void bad();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_17 { void bad();}

	namespace CWE676_Use_of_Potentially_Dangerous_Function__basic_18 { void bad();}

	/* END-AUTOGENERATED-CPP-BAD-FUNCTION-DECLARATIONS */
#endif // OMITBAD


#endif // __cplusplus


#endif //  _TESTCASES_H
