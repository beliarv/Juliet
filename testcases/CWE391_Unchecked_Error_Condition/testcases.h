// NOTE - eventually this file will be automatically updated using a Perl script that understand
// the naming of test case files, functions, and namespaces.

#ifndef _TESTCASES_H
#define _TESTCASES_H

#ifdef __cplusplus
extern "C" {
#endif

// declare C good and bad functions
#ifndef OMITGOOD
	/* BEGIN-AUTOGENERATED-C-GOOD-FUNCTION-DECLARATIONS */
	void CWE391_Unchecked_Error_Condition__sqrt_01_good();

	void CWE391_Unchecked_Error_Condition__sqrt_02_good();

	void CWE391_Unchecked_Error_Condition__sqrt_03_good();

	void CWE391_Unchecked_Error_Condition__sqrt_04_good();

	void CWE391_Unchecked_Error_Condition__sqrt_05_good();

	void CWE391_Unchecked_Error_Condition__sqrt_06_good();

	void CWE391_Unchecked_Error_Condition__sqrt_07_good();

	void CWE391_Unchecked_Error_Condition__sqrt_08_good();

	void CWE391_Unchecked_Error_Condition__sqrt_09_good();

	void CWE391_Unchecked_Error_Condition__sqrt_10_good();

	void CWE391_Unchecked_Error_Condition__sqrt_11_good();

	void CWE391_Unchecked_Error_Condition__sqrt_12_good();

	void CWE391_Unchecked_Error_Condition__sqrt_13_good();

	void CWE391_Unchecked_Error_Condition__sqrt_14_good();

	void CWE391_Unchecked_Error_Condition__sqrt_15_good();

	void CWE391_Unchecked_Error_Condition__sqrt_16_good();

	void CWE391_Unchecked_Error_Condition__sqrt_17_good();

	void CWE391_Unchecked_Error_Condition__sqrt_18_good();

	void CWE391_Unchecked_Error_Condition__strtol_01_good();

	void CWE391_Unchecked_Error_Condition__strtol_02_good();

	void CWE391_Unchecked_Error_Condition__strtol_03_good();

	void CWE391_Unchecked_Error_Condition__strtol_04_good();

	void CWE391_Unchecked_Error_Condition__strtol_05_good();

	void CWE391_Unchecked_Error_Condition__strtol_06_good();

	void CWE391_Unchecked_Error_Condition__strtol_07_good();

	void CWE391_Unchecked_Error_Condition__strtol_08_good();

	void CWE391_Unchecked_Error_Condition__strtol_09_good();

	void CWE391_Unchecked_Error_Condition__strtol_10_good();

	void CWE391_Unchecked_Error_Condition__strtol_11_good();

	void CWE391_Unchecked_Error_Condition__strtol_12_good();

	void CWE391_Unchecked_Error_Condition__strtol_13_good();

	void CWE391_Unchecked_Error_Condition__strtol_14_good();

	void CWE391_Unchecked_Error_Condition__strtol_15_good();

	void CWE391_Unchecked_Error_Condition__strtol_16_good();

	void CWE391_Unchecked_Error_Condition__strtol_17_good();

	void CWE391_Unchecked_Error_Condition__strtol_18_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_01_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_02_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_03_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_04_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_05_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_06_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_07_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_08_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_09_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_10_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_11_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_12_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_13_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_14_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_15_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_16_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_17_good();

	void CWE391_Unchecked_Error_Condition__wcstombs_18_good();

	/* END-AUTOGENERATED-C-GOOD-FUNCTION-DECLARATIONS */
#endif // OMITGOOD


#ifndef OMITBAD
	/* BEGIN-AUTOGENERATED-C-BAD-FUNCTION-DECLARATIONS */
	void CWE391_Unchecked_Error_Condition__sqrt_01_bad();

	void CWE391_Unchecked_Error_Condition__sqrt_02_bad();

	void CWE391_Unchecked_Error_Condition__sqrt_03_bad();

	void CWE391_Unchecked_Error_Condition__sqrt_04_bad();

	void CWE391_Unchecked_Error_Condition__sqrt_05_bad();

	void CWE391_Unchecked_Error_Condition__sqrt_06_bad();

	void CWE391_Unchecked_Error_Condition__sqrt_07_bad();

	void CWE391_Unchecked_Error_Condition__sqrt_08_bad();

	void CWE391_Unchecked_Error_Condition__sqrt_09_bad();

	void CWE391_Unchecked_Error_Condition__sqrt_10_bad();

	void CWE391_Unchecked_Error_Condition__sqrt_11_bad();

	void CWE391_Unchecked_Error_Condition__sqrt_12_bad();

	void CWE391_Unchecked_Error_Condition__sqrt_13_bad();

	void CWE391_Unchecked_Error_Condition__sqrt_14_bad();

	void CWE391_Unchecked_Error_Condition__sqrt_15_bad();

	void CWE391_Unchecked_Error_Condition__sqrt_16_bad();

	void CWE391_Unchecked_Error_Condition__sqrt_17_bad();

	void CWE391_Unchecked_Error_Condition__sqrt_18_bad();

	void CWE391_Unchecked_Error_Condition__strtol_01_bad();

	void CWE391_Unchecked_Error_Condition__strtol_02_bad();

	void CWE391_Unchecked_Error_Condition__strtol_03_bad();

	void CWE391_Unchecked_Error_Condition__strtol_04_bad();

	void CWE391_Unchecked_Error_Condition__strtol_05_bad();

	void CWE391_Unchecked_Error_Condition__strtol_06_bad();

	void CWE391_Unchecked_Error_Condition__strtol_07_bad();

	void CWE391_Unchecked_Error_Condition__strtol_08_bad();

	void CWE391_Unchecked_Error_Condition__strtol_09_bad();

	void CWE391_Unchecked_Error_Condition__strtol_10_bad();

	void CWE391_Unchecked_Error_Condition__strtol_11_bad();

	void CWE391_Unchecked_Error_Condition__strtol_12_bad();

	void CWE391_Unchecked_Error_Condition__strtol_13_bad();

	void CWE391_Unchecked_Error_Condition__strtol_14_bad();

	void CWE391_Unchecked_Error_Condition__strtol_15_bad();

	void CWE391_Unchecked_Error_Condition__strtol_16_bad();

	void CWE391_Unchecked_Error_Condition__strtol_17_bad();

	void CWE391_Unchecked_Error_Condition__strtol_18_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_01_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_02_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_03_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_04_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_05_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_06_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_07_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_08_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_09_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_10_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_11_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_12_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_13_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_14_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_15_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_16_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_17_bad();

	void CWE391_Unchecked_Error_Condition__wcstombs_18_bad();

	/* END-AUTOGENERATED-C-BAD-FUNCTION-DECLARATIONS */
#endif // OMITBAD

#ifdef __cplusplus
} // end extern "C"
#endif

#ifdef __cplusplus
// declare C++ namespaces and good and bad functions

#ifndef OMITGOOD
	/* BEGIN-AUTOGENERATED-CPP-GOOD-FUNCTION-DECLARATIONS */

	/* END-AUTOGENERATED-CPP-GOOD-FUNCTION-DECLARATIONS */
#endif // OMITGOOD


#ifndef OMITBAD
	/* BEGIN-AUTOGENERATED-CPP-BAD-FUNCTION-DECLARATIONS */

	/* END-AUTOGENERATED-CPP-BAD-FUNCTION-DECLARATIONS */
#endif // OMITBAD


#endif // __cplusplus


#endif //  _TESTCASES_H
